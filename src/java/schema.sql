Create table p_User
(user_id NUMBER(5) GENERATED BY DEFAULT ON NULL AS IDENTITY CONSTRAINT p_user_user_id_pk PRIMARY KEY,
user_name VARCHAR2(20) CONSTRAINT p_user_user_name_un UNIQUE,
passwd VARCHAR2(20) not Null,
FName VARCHAR2(20),
LName VARCHAR2(20),
phone VARCHAR2(20),
user_type VARCHAR2(20),
Email VARCHAR2(50)
);
alter table p_user
add Constraint p_user_type_ck CHECK (user_type='admin' OR user_type='user');


insert into p_User values (1, 'mohini', 'pass', 'Mohini', 'Chaudhary', '647981', 'admin', 'mohinichau8@gmil.com');
insert into p_User values (2, 'kamal', 'pass', 'Kamal', 'Dhillion', '6479981', 'user', 'kamalchau8@gmil.com');
insert into p_User values (3, 'robert', 'pass', 'Robert', 'Bh', '647967681', 'user', 'rabertchau8@gmil.com');
desc p_User;

Create table p_Room
(room_number NUMBER(5) GENERATED BY DEFAULT ON NULL AS IDENTITY CONSTRAINT p_room_room_number_pk PRIMARY KEY,
room_availability Char ,
picture VARCHAR2(20),
room_type VARCHAR2(20),
floor VARCHAR2(20),
area VARCHAR2(20),
daily_price Number(5,2),
bedsNumber Number(2),
room_feature VARCHAR2(20)
);
alter table p_room
add Constraint p_room_availability_ck CHECK (room_availability='Y' OR room_availability='N');

--checking if instert is working or not.
insert into p_room (room_number,room_availability,picture,room_type,floor,area,daily_price,bedsNumber,room_feature) 
Values (6, 'Y', 'room6.jpg', 'regular room', 'Top floor', 'east area', 170.5, 4, 'None');

--Checking if update works or not
update p_room set room_availability= 'Y',picture='room7.jpg',room_type='Dyanamic room',floor='Groud floor',
area='west',daily_price=23.6,bedsNumber=1,room_feature='satellite' 
where room_number=7;

insert into p_room values (1, 'Y', 'room1.jpg', 'president room', 'ground floor', 'west area', 770.5, 4, 'huge TV');
insert into p_room values (2, 'Y', 'room2.jpg', 'regular room', 'first floor', 'east area', 250, 3, 'Satellite');
insert into p_room values (3, 'Y', 'room3.jpg', 'regular room', 'second floor', 'south area', 150, 1, 'nothing special');
insert into p_room values (4, 'N', 'room4.jpg', 'simple room', 'second floor', 'north area', 100, 1, 'nothing special');
insert into p_room values (5, 'Y', 'room5.jpg', 'president room', 'third floor', 'east area', 770.5, 1, 'wine');
insert into p_room values (6,'N', 'room8.jpg', 'simple room', 'Fourth floor', 'north area', 100, 2, 'none');
commit;

select max(room_number)+1 as NextNum from p_room;

Create table p_BookingRoom
(user_id NUMBER(5) Not Null ,
room_number NUMBER(5)Not Null,
startDate Date,
EndDate Date,
price number(5,2),
specialRequest VARCHAR2(50)
);

ALTER TABLE p_BookingRoom ADD CONSTRAINT booking_user_id_fk FOREIGN KEY ( user_id ) REFERENCES p_User( user_id );

ALTER TABLE p_BookingRoom ADD CONSTRAINT booking_room_number_fk FOREIGN KEY ( room_number ) REFERENCES p_Room( room_number );

SELECT * FROM p_Room where room_availability='Y' OR room_availability='N'  ;



COMMIT;

select * from p_room;